package easyCourierFunction;

import android.app.Activity;
import android.os.Bundle;
import android.os.Handler;
import android.support.annotation.AnyRes;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.example.easycourier.R;

import easyCourierHttpPost.RULHttpPost;

/**
 * 
 * @author vacation
 * 
 *         该类实现获取用户输入的信息，
 * 
 *         将获取的信息传递给网络请求 RULHttpPost.class
 * 
 *         网络请求向远程数据库发送插入操作请求，数据库返回结果码
 * 
 *         网络请求类将结果码发送给主线程处理
 * 
 */
public class RequestUpLoad extends Activity {

	/**
	 * 
	 * 获取所有 EditText 控件
	 * 
	 */
	private EditText et_providerName;
	private EditText et_nickName;
	private EditText et_reward;
	private EditText et_addFrom;
	private EditText et_addTo;
	private EditText et_timeLimit;
	private EditText et_size;
	private EditText et_phone;
	private EditText et_kinds;
	private EditText et_remarks;

	// 获取“确定按钮”
	private Button bt_RequestCommit;

	// 临时存放用户信息
	private String providerName;
	private String nickName;
	private String reward;
	private String addFrom;
	private String addTo;
	private String timeLimit;
	private String size;
	private String phone;
	private String kinds;
	private String remarks;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_requestupload);
		getActionBar().setDisplayShowHomeEnabled(false);

		/**
		 * 获取所有控件
		 */

		et_providerName = (EditText) findViewById(R.id.et_RUL_providerName);
		et_nickName = (EditText) findViewById(R.id.et_RUL_nickName);
		et_reward = (EditText) findViewById(R.id.et_RUL_reward);
		et_addFrom = (EditText) findViewById(R.id.et_RUL_addFrom);
		et_addTo = (EditText) findViewById(R.id.et_RUL_addTo);
		et_timeLimit = (EditText) findViewById(R.id.et_RUL_timeLimit);
		et_size = (EditText) findViewById(R.id.et_RUL_size);
		et_phone = (EditText) findViewById(R.id.et_RUL_phone);
		et_kinds = (EditText) findViewById(R.id.et_RUL_kinds);
		et_remarks = (EditText) findViewById(R.id.et_RUL_remarks);

		bt_RequestCommit = (Button) findViewById(R.id.bt_RUL_Commit);

		/**
		 * 为“确定”按钮设置监听
		 * 
		 * 当点击该按钮，触发启动网络请求线程
		 */
		bt_RequestCommit.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {

				// 获取用户输入的信息
				providerName = et_providerName.getText().toString();
				nickName = et_nickName.getText().toString();
				reward = et_reward.getText().toString();
				addFrom = et_addFrom.getText().toString();
				addTo = et_addTo.getText().toString();
				timeLimit = et_timeLimit.getText().toString();
				size = et_size.getText().toString();
				phone = et_phone.getText().toString();
				kinds = et_kinds.getText().toString();
				remarks = et_remarks.getText().toString();

				// 判断信息是否填写完毕
				if (providerName.equals("") || nickName.equals("")
						|| reward.equals("") || addFrom.equals("")
						|| addTo.equals("") || timeLimit.equals("")
						|| size.equals("") || phone.equals("")
						|| kinds.equals("") || remarks.equals("")) {

					// 提醒用户信息未完全填写
					Toast.makeText(RequestUpLoad.this, "信息未完全填写！",
							Toast.LENGTH_LONG).show();

				} else {

					// 将获取的信息作为参数，传入网络请求线程
					RULHttpPost mHttpPost = new RULHttpPost(providerName,
							nickName, reward, addFrom, addTo, timeLimit, size,
							phone, kinds, remarks);

					// 启动网络请求线程
					mHttpPost.start();

				}

			}
		});

	}

	// 处理网络访问线程回传的消息
	public static Handler RULHandler = new Handler() {
		public void handleMessage(android.os.Message msg) {

			switch (msg.what) {
			/**
			 * 
			 * TODO
			 * 
			 */
			}

		};
	};

}
