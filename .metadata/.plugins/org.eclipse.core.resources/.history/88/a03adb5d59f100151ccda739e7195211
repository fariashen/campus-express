package com.example.easycourier;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;

import org.apache.http.HttpResponse;
import org.apache.http.HttpStatus;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;

public class RegiesterHandle extends Thread {

	/**
	 * 
	 * 在此类里实现注册的相关数据库操作
	 * 
	 * 传入要插入的参数‘用户名’，‘密码’，‘电话’，‘邮箱’以及连接的数据库‘地址’
	 * 
	 * 通过在run()方法内调用相应的方法实现数据库操作
	 * 
	 * 返回值为 true || false ，返回值存储在 result 内，由 Regiester.java 进行调用
	 * 
	 */

	public static boolean result = false;// 返回数据库操作结果信息

	private String regiesterUserName;
	private String regiesterPassWord;
	private String regiesterPhone;
	private String regiesterEmail;

	private String regiesterConnectUrl;

	public RegiesterHandle(String userName, String passWord, String phone,
			String email, String connectUrl) {
		// TODO Auto-generated constructor stub
		this.regiesterUserName = userName;
		this.regiesterPassWord = passWord;
		this.regiesterPhone = phone;
		this.regiesterEmail = email;

		this.regiesterConnectUrl = connectUrl;

	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		gotoLogin();
	}

	private void gotoLogin() {
		// TODO Auto-generated method stub

		HttpClient mClient = new DefaultHttpClient();
		// 发送post请求
		HttpPost httpPost = new HttpPost(regiesterConnectUrl);

		// 构建NameValuePair[]阵列存储Post请求变量

		ArrayList<NameValuePair> params = new ArrayList<NameValuePair>();
		params.add(new BasicNameValuePair("userName", regiesterUserName));
		params.add(new BasicNameValuePair("passWord", regiesterPassWord));
		params.add(new BasicNameValuePair("phone", regiesterPhone));
		params.add(new BasicNameValuePair("email", regiesterEmail));

		HttpResponse httpResponse;

		// 发送HTTP请求

		try {
			httpPost.setEntity(new UrlEncodedFormEntity(params));

			// 取得HTTP response

			httpResponse = mClient.execute(httpPost);

			if (httpResponse.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {
				// 此时插入用户数据操作成功

				result = EntityUtils.toString(httpResponse.getEntity());

			}
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClientProtocolException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
