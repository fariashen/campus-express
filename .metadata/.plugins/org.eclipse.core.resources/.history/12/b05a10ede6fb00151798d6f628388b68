package easyCourierFragment;

import java.util.ArrayList;
import java.util.List;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;

import com.example.easycourier.ItemBean;
import com.example.easycourier.MyBaseAdapter;
import com.example.easycourier.R;

import easyCourierFunction.RequestDetailShow;
import easyCourierHttpPost.RequsetShowFragHttpPost;

/**
 * 
 * @author vacation
 *
 *	通过BaseAdapter 将所有请求显示在ListView 中
 *
 */
public class RequestShowFragment extends Fragment {

	//网络请求的成员变量
	private RequsetShowFragHttpPost mHttpPost;
	
	//接受子线程发送的更新UI的请求
	public static Handler RSF_Handler;
	
	//涉及更新操作的成员变量
	public static View view;
	public static ListView RSF_ListView;
	
	private RequestDetailShow detailShow = new RequestDetailShow();
	
	//启动Activity的成员变量
	private Intent mIntent;
	
	//将用户点击的Item的所有信息值写入Bundle
	//在启动RequestDetailShow.class的时候，将Bundle传过去
	private Bundle bundle;
	
	List<ItemBean> itemBeanList;
	
	@Override
	public View onCreateView(LayoutInflater inflater,
			@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {

		view = inflater.inflate(R.layout.fragment_requestshow,container,false);
		
		/**
		 * 
		 * 创建一个ItemBean List
		 * 
		 * 每一个ItemBean对象相当于ListView中的一条数据
		 * 
		 */
		itemBeanList= new ArrayList<ItemBean>();
		for(int i=0;i<20;i++){
			
			//往List中添加itemBean对象
			itemBeanList.add(new ItemBean(
					R.drawable.ic_launcher, 
					"CourierType"+i, 
					"receiveTime"+i));
			
		}
		
		//建立ListView和BaseAdapter的联系
		RSF_ListView = (ListView) view.findViewById(R.id.lv_RequestShow);
		
		RSF_ListView.setAdapter(new MyBaseAdapter(view.getContext(), itemBeanList));
		
		RSF_ListView.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				// TODO
				/**
				 * 
				 * 获取被点击的数据项的所有信息
				 * 
				 * 根据获取的信息设置RequestDetailShow.class的控件值
				 * 
				 */
//				detailShow.mImageView.setImageResource(mHttpPost.itemBeanList.get(position).itemImageResid);
//				detailShow.mTitle.setText(mHttpPost.itemBeanList.get(position).itemTitle);
//				detailShow.mContent.setText(mHttpPost.itemBeanList.get(position).itemContent);
				
//				detailShow.mImageView.setImageResource(itemBeanList.get(position).itemImageResid);
//				detailShow.mTitle.setText(itemBeanList.get(position).itemTitle);
//				detailShow.mContent.setText(itemBeanList.get(position).itemContent);

				
				System.out.println("------------>position"+itemBeanList.get(position).itemTitle);
				System.out.println("------------>id"+id);
				
				//启动RequestDetailShow.class
				mIntent = new Intent(view.getContext(), RequestDetailShow.class);
				
				bundle = new Bundle();
				
				bundle.putInt("resourceId", itemBeanList.get(position).itemImageResid);
				bundle.putString("Title", itemBeanList.get(position).itemTitle);
				bundle.putString("Content", itemBeanList.get(position).itemContent);
				
				mIntent.putExtra("RequestItemClick", bundle);
				
				startActivity(mIntent);
				
			}
		});
		//实例化mHttpPost,并启动网络访问线程
//		mHttpPost = new RequsetShowFragHttpPost();
//		mHttpPost.start();
		
		return view;
	}
		
}
