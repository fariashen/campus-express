package easyCourierFragment;

import android.content.Context;
import android.content.Intent;
import android.graphics.drawable.ColorDrawable;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.PopupWindow;
import android.widget.TextView;

import com.example.easycourier.R;

import easyCourierFunction.ShowAcceptedRequest;

/**
 * 
 * @author vacation
 * 
 *         当点击“个人信息”按钮时，触发调用 PersonalInfoShow.java
 * 
 *         当点击“信息修改”按钮时，触发调用 PersonalInfoEdit.java
 * 
 *         当点击“已接受请求”按钮时，触发调用查询已接受请求方法
 * 
 */

public class PersonalCenterFragment extends Fragment implements OnClickListener {

	// 保存PersonalCenterFragment的布局
	private View mView;

	/**
	 * 参数
	 * 
	 * 用户名控件 tv_PersonalCenter_Username
	 * 
	 * 密码控件 tv_PersonalCenter_Password
	 * 
	 * 修改按钮 bt_PersonalCenter_Edit
	 * 
	 */

	private TextView tv_PersonalCenter_PI;
	private TextView tv_PersonalCenter_UpLoadedRequest;
	private TextView tv_PersonalCenter_AcceptedRequest;

	private Button bt_PersonalCenter_Exit;
	// 启动相应的操作类
	private Intent intent;

	@Override
	public View onCreateView(LayoutInflater inflater,
			@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {

		mView = inflater.inflate(R.layout.fragment_personalcenter, container,
				false);

		/**
		 * 初始化控件
		 */
		tv_PersonalCenter_PI = (TextView) mView
				.findViewById(R.id.tv_PersonalCenter_PI);
		tv_PersonalCenter_UpLoadedRequest = (TextView) mView
				.findViewById(R.id.tv_PersonalCenter_UpLoadedRequest);
		tv_PersonalCenter_AcceptedRequest = (TextView) mView
				.findViewById(R.id.tv_PersonalCenter_AcceptedRequest);
		bt_PersonalCenter_Exit = (Button) mView
				.findViewById(R.id.bt_PersonalCenter_Exit);
		// 为修改按钮设置监听

		tv_PersonalCenter_PI.setOnClickListener(this);
		tv_PersonalCenter_UpLoadedRequest.setOnClickListener(this);
		tv_PersonalCenter_AcceptedRequest.setOnClickListener(this);

		return mView;
	}

	@Override
	public void onClick(View v) {

		/**
		 * 
		 * 判断选择控件的ID
		 * 
		 * 根据不同的ID，做出不同的响应
		 * 
		 */

		switch (v.getId()) {

		// 当点击“个人信息”按钮时，触发调用 PersonalInfoShow.java
		case R.id.tv_PersonalCenter_PI:

			intent = new Intent(mView.getContext(), PersonalInfoShow.class);
			startActivity(intent);
			break;

		// 当点击“已发送请求”按钮时，触发调用查询已发送请求方法
		case R.id.tv_PersonalCenter_UpLoadedRequest:

			// TODO
			intent = new Intent(mView.getContext(), ShowUpLoadedRequest.class);
			startActivity(intent);
			
			break;
		// 当点击“已接受请求”按钮时，触发调用查询已接受请求方法
		case R.id.tv_PersonalCenter_AcceptedRequest:

			intent = new Intent(mView.getContext(), ShowAcceptedRequest.class);
			startActivity(intent);
			break;

		case R.id.bt_PersonalCenter_Exit:

			showPopwindow();
			break;
		}
	}

	private void showPopwindow() {

		// 利用layoutInflater获得View
		LayoutInflater inflater = (LayoutInflater) getActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		View view = inflater.inflate(R.layout.actitvity_exit, null);

		// 下面是两种方法得到宽度和高度 getWindow().getDecorView().getWidth()

		PopupWindow window = new PopupWindow(view,
				WindowManager.LayoutParams.MATCH_PARENT,
				WindowManager.LayoutParams.WRAP_CONTENT);

		// 设置popWindow弹出窗体可点击，这句话必须添加，并且是true
		window.setFocusable(true);

		// 实例化一个ColorDrawable颜色为半透明
		ColorDrawable dw = new ColorDrawable(0xb0000000);
		window.setBackgroundDrawable(dw);

		// 设置popWindow的显示和消失动画
		window.setAnimationStyle(R.style.mypopwindow_anim_style);

		// 在底部显示
		window.showAtLocation(mView.findViewById(R.id.bt_PersonalCenter_Exit), Gravity.BOTTOM, 0,
				0);

	}


}
